{"ast":null,"code":"var _jsxFileName = \"/Users/Mick/feed2/src/components/mainView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Aside from './aside';\nimport Reply from './reply';\nimport Thread from './thread';\nimport MessageBox from './message';\nimport '../css/mainView.css';\nimport threads from '../data/threads';\nimport messages from '../data/messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [channel, setChannel] = useState('');\n  const [repliesList, setRepliesList] = useState([]);\n  const [leadingThread, setLeadingThread] = useState('');\n  const [showReplies, setShowReplies] = useState(false);\n  const placeHolder = 'message #' + channel;\n\n  function giveThreads(channelSelected) {\n    const threadList = Object.values(threads);\n    const threadRenderList = [];\n\n    for (let i = 0; i < threadList.length; i += 1) {\n      if (threadList[i].channel === channelSelected) {\n        threadRenderList.push( /*#__PURE__*/_jsxDEV(Thread, {\n          title: threadList[i].title,\n          replies: threadList[i].messages,\n          by: threadList[i].creator,\n          click1: setRepliesList,\n          click2: setShowReplies,\n          click3: setLeadingThread\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 39\n        }, this));\n      }\n    }\n\n    return threadRenderList;\n  }\n\n  function renderReplies(mainMessage, messageList) {\n    let renderRepliesList = [/*#__PURE__*/_jsxDEV(MessageBox, {\n      message: mainMessage,\n      by: \"123\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"\",\n      children: [messageList.length, \" replies\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 81\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 130\n    }, this)];\n    let temp = '';\n\n    for (let i = 0; i < messageList.length; i += 1) {\n      temp = messages[messageList[i]];\n      renderRepliesList.push( /*#__PURE__*/_jsxDEV(MessageBox, {\n        message: temp.messageBody,\n        by: temp.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 36\n      }, this));\n    }\n\n    return renderRepliesList;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"aside\",\n          children: /*#__PURE__*/_jsxDEV(Aside, {\n            click: setChannel,\n            show: setShowReplies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"feed\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: giveThreads(channel)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Reply, {\n              holder: placeHolder,\n              class: !showReplies ? 'textArea' : 'textAreaShort'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), showReplies && /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"threadContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"threadContentMessages\",\n            children: renderReplies(leadingThread, repliesList)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom_background\",\n            children: /*#__PURE__*/_jsxDEV(Reply, {\n              holder: \"#reply\",\n              class: \"textAreaShowReplies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"GVVIgwyrrUyIkQdPJ1oQChmOvcw=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/Mick/feed2/src/components/mainView.js"],"names":["React","useState","Aside","Reply","Thread","MessageBox","threads","messages","Main","channel","setChannel","repliesList","setRepliesList","leadingThread","setLeadingThread","showReplies","setShowReplies","placeHolder","giveThreads","channelSelected","threadList","Object","values","threadRenderList","i","length","push","title","creator","renderReplies","mainMessage","messageList","renderRepliesList","temp","messageBody","author"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Aside from './aside';\nimport Reply from './reply';\nimport Thread from './thread';\nimport MessageBox from './message';\nimport '../css/mainView.css';\nimport threads from '../data/threads';\nimport messages from '../data/messages';\n\n\nexport default function Main() {\n   const [channel, setChannel] = useState('');\n   const [repliesList, setRepliesList] = useState([]);\n   const [leadingThread, setLeadingThread] = useState('');\n   const [showReplies, setShowReplies] = useState(false);\n   const placeHolder = 'message #' + channel;\n\n    function giveThreads(channelSelected){\n        const threadList = Object.values(threads);\n        const threadRenderList = []\n        for (let i = 0; i < threadList.length; i += 1){\n            if (threadList[i].channel === channelSelected){\n                threadRenderList.push(<Thread title={threadList[i].title} replies={threadList[i].messages} by={threadList[i].creator} click1={setRepliesList} click2={setShowReplies} click3={setLeadingThread}/>)\n                \n            } \n        }\n        return threadRenderList;\n    }\n    function renderReplies(mainMessage, messageList) {\n        let renderRepliesList = [<MessageBox message={mainMessage} by='123' />, <p className=\"\">{messageList.length} replies</p>,<hr />]\n        let temp = '';\n        for (let i = 0; i < messageList.length; i += 1 ){\n            temp = messages[messageList[i]];\n            renderRepliesList.push(<MessageBox message={temp.messageBody} by={temp.author} />)\n        }\n        return renderRepliesList;    \n    }\n \n   return (\n    <div className=\"main\">\n        <table>\n            <tr>\n                <td className=\"aside\">\n                <Aside click={setChannel} show={setShowReplies}/>\n                </td>\n                <td className=\"feed\">\n                    <div>{giveThreads(channel)}</div>\n                   <div>\n                       <Reply holder={placeHolder} class={!showReplies ? 'textArea': 'textAreaShort'} />\n                       </div>\n                </td>\n                {showReplies &&( \n                <td className=\"threadContent\">\n                    <div className=\"threadContentMessages\">\n                        {renderReplies(leadingThread, repliesList)}\n                    </div>\n                        <div className=\"bottom_background\">\n                            <Reply holder=\"#reply\" class='textAreaShowReplies' />\n                        </div>\n                </td> )}\n            </tr>\n        </table>\n    </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}