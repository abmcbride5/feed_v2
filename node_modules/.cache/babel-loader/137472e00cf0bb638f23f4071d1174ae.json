{"ast":null,"code":"var _jsxFileName = \"/Users/Mick/feed_v2/src/components/mainView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Aside from './aside';\nimport Reply from './reply';\nimport Thread from './thread';\nimport MessageBox from './message';\nimport '../css/mainView.css';\nimport threads from '../data/threads';\nimport messages from '../data/messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n\n  const [channel, setChannel] = useState('');\n  const [repliesList, setRepliesList] = useState([]);\n  const [leadingThread, setLeadingThread] = useState('');\n  const [showReplies, setShowReplies] = useState(false);\n  const placeHolder = 'message #' + channel;\n\n  function giveThreads(channelSelected) {\n    const threadList = Object.values(threads);\n    const threadRenderList = [];\n\n    for (let i = 0; i < threadList.length; i += 1) {\n      if (threadList[i].channel === channelSelected) {\n        threadRenderList.push( /*#__PURE__*/_jsxDEV(Thread, {\n          title: threadList[i].title,\n          replies: threadList[i].messages,\n          by: threadList[i].creator,\n          click1: setRepliesList,\n          click2: setShowReplies,\n          click3: setLeadingThread\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this));\n      }\n    }\n\n    return threadRenderList;\n  }\n\n  function renderReplies(mainMessage, messageList) {\n    let renderRepliesList = [/*#__PURE__*/_jsxDEV(MessageBox, {\n      message: mainMessage,\n      by: \"123\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"\",\n      children: [messageList.length, \" replies\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)];\n    let temp = '';\n\n    for (let i = 0; i < messageList.length; i += 1) {\n      temp = messages[messageList[i]];\n      renderRepliesList.push( /*#__PURE__*/_jsxDEV(MessageBox, {\n        message: temp.messageBody,\n        by: temp.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this));\n    }\n\n    return renderRepliesList;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_view\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"mainView_aside\",\n            children: /*#__PURE__*/_jsxDEV(Aside, {\n              click: setChannel,\n              show: setShowReplies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: !showReplies ? \"feed_only\" : \"feed_thread\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: giveThreads(channel)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Reply, {\n              class1: !showReplies ? \"reply1\" : \"reply2\",\n              class2: !showReplies ? \"textArea1\" : \"textArea2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), showReplies && /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"threadContent\",\n            children: /*#__PURE__*/_jsxDEV(Reply, {\n              class1: \"reply3\",\n              class2: \"textArea3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"GVVIgwyrrUyIkQdPJ1oQChmOvcw=\");\n\n_c = Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/Mick/feed_v2/src/components/mainView.js"],"names":["React","useState","Aside","Reply","Thread","MessageBox","threads","messages","Main","channel","setChannel","repliesList","setRepliesList","leadingThread","setLeadingThread","showReplies","setShowReplies","placeHolder","giveThreads","channelSelected","threadList","Object","values","threadRenderList","i","length","push","title","creator","renderReplies","mainMessage","messageList","renderRepliesList","temp","messageBody","author"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Aside from './aside';\nimport Reply from './reply';\nimport Thread from './thread';\nimport MessageBox from './message';\nimport '../css/mainView.css';\nimport threads from '../data/threads';\nimport messages from '../data/messages';\n\nexport default function Main(){\n    const [channel, setChannel] = useState('');\n    const [repliesList, setRepliesList] = useState([]);\n    const [leadingThread, setLeadingThread] = useState('');\n    const [showReplies, setShowReplies] = useState(false);\n    const placeHolder = 'message #' + channel;\n\n    function giveThreads(channelSelected){\n        \n        const threadList = Object.values(threads);\n        \n        const threadRenderList = []\n        \n        for (let i = 0; i < threadList.length; i += 1){\n            if (threadList[i].channel === channelSelected){\n                threadRenderList.push(\n                <Thread \n                title={threadList[i].title} \n                replies={threadList[i].messages} \n                by={threadList[i].creator} \n                click1={setRepliesList} \n                click2={setShowReplies} \n                click3={setLeadingThread}\n                />)\n                \n            } \n        }\n        return threadRenderList;\n    }\n    \n    function renderReplies(mainMessage, messageList) {\n        \n        let renderRepliesList = [\n        <MessageBox \n            message={mainMessage} \n            by='123' />, \n        <p className=\"\">{messageList.length} replies</p>,\n        <hr />\n        ];\n\n        let temp = '';\n\n        for (let i = 0; i < messageList.length; i += 1 ){\n            temp = messages[messageList[i]];\n            renderRepliesList.push(\n            <MessageBox \n                message={temp.messageBody} \n                by={temp.author} \n            />)\n        }\n        return renderRepliesList;    \n    }\n\n    return (\n        <div className=\"main_view\">\n            <table>\n                <tbody>\n                <tr>\n                   <td className=\"mainView_aside\">\n                        <Aside click={setChannel} show={setShowReplies} />   \n                    </td> \n                    <td className={!showReplies ? \"feed_only\": \"feed_thread\"}>\n                        <div>{giveThreads(channel)}</div>\n                        <Reply class1={!showReplies ? \"reply1\": \"reply2\"} class2={!showReplies ? \"textArea1\": \"textArea2\"} />\n                    </td>\n                    \n                    {showReplies && (\n                        <td className=\"threadContent\">\n                        <Reply class1=\"reply3\" class2=\"textArea3\" />\n                        </td>)}\n                </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}